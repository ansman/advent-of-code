[versions]
moshi = "1.8.0"
kotlin = "1.7.20"
arrow = "1.1.3"
coroutines = "1.6.4"
compose = "1.3.0"
composeMaterial1 = "1.3.1"
composeKotlinCompiler = "1.3.2"
composeConstraint = "1.1.0-alpha01"
composeCustomView = "1.2.0-alpha02"
composeCustomViewPoolingContainer = "1.0.0"
composeActivityVersion = "1.5.0"
material3Design = "1.0.0-beta02"
material2Design = "1.3.0"
activity = "1.6.1"
androidGradlePlugin = "7.4.0-rc01"
androidCore = "1.9.0"
androidArchCoreTesting = "2.1.0"
androidMinSdkVersion = "27"
androidTargetSdkVersion = "33"
androidCompileSdkVersion = "33"
androidBuildToolsVersion = "33.0.0"
appCompat = "1.5.1"
browser = "1.4.0"
cardview = "1.0.0"
constraintLayout = "2.1.1"
fragment = "1.5.4"
lifecycle = "2.5.1"
flexbox = "3.0.0"
navigation = "2.5.3"
recyclerview = "1.2.1"
savedState = "1.2.0"
transition = "1.4.1"
workManager = "2.7.1"
startup = "1.1.1"
sharetarget = "1.2.0-rc01"
lottie = "5.2.0"
billing = "5.0.0"
okio = "2.10.0"
okhttp = "4.9.3"
retrofit = "2.9.0"
coil = "2.2.2"
exoPlayer = "2.18.2"
mp4Composer = "v0.4.1"
dagger = "2.42"
hilt = "1.0.0"
firebaseAnalytics = "21.0.0"
firebaseAuth = "19.4.0"
firebaseCrashlytics = "18.3.1"
firebasePerformance = "20.0.6"
firebaseMessaging = "22.0.0"
googleAuth = "19.2.0"
googleAuthPhone = "18.0.1"
googleLocation = "18.0.0"
googleMaps = "18.0.0"
googlePlayCore = "1.10.2"
facebook = "15.1.0"
bolts = "1.4.0"
sendbird = "3.1.23"
sendbirdVideo = "1.10.0"
braze = "16.0.0"
installreferrer = "2.2"
appsflyer = "6.4.2"
room = "2.4.3"
leakCanary = "2.9.1"
flipper = "0.149.0"
ssoloader = "0.10.3"
timber = "5.0.1"
betterLinkMovement = "2.2.0"
junit = "4.13.2"
mockk = "1.13.2"
androidXTestCore = "1.5.0-beta01"
androidXTestRunner = "1.5.0-beta01"
androidXTestRules = "1.4.1-beta01"
uiAutomator = "2.2.0"
turbine = "0.11.0"
espresso = "3.4.0"
desugar = "1.1.5"
androidXExtJunit = "1.1.3"
split = "2.13.1"
camerax = "1.1.0"
concurrentFutures = "1.1.0"
ktlintCore = "0.45.2"
faker = "1.11.0"
testOrchestrator = "1.4.1"
accompanist = "0.27.0"
showkase = "1.0.0-beta14"

[plugins]

toml-checker = "com.github.ben-manes.versions:0.42.0"
toml-updater = "nl.littlerobots.version-catalog-update:0.4.0"
dependencyAnalysis = "com.autonomousapps.dependency-analysis:1.16.0"


[libraries]

kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
android-gradlePluginApi = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
google-sms-services-gradlePlugin = { module = "com.google.gms:google-services", version = "4.3.10" }
firebase-crashlytics-gradlePlugin = { module = "com.google.firebase:firebase-crashlytics-gradle", version = "2.8.1" }
firebase-pref-gradlePlugin = { module = "com.google.firebase:perf-plugin", version = "1.4.1" }
dagger-hilt-android-gradlePlugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "dagger" }
triplet-gradle-play-publisher-gradlePlugin = { module = "com.github.triplet.gradle:play-publisher", version = "3.6.0" }
android-gradle-build-cache-fix-gradlePlugin = { module = "org.gradle.android.cache-fix:org.gradle.android.cache-fix.gradle.plugin", version = "2.6.0" }

# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

# Arrow
arrow = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrowfx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }

# assertk
assertk = "com.willowtreeapps.assertk:assertk-jvm:0.25"

# AndroidX Core
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidCore" }

# AndroidX UI
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
materialDesign = { module = "com.google.android.material:material", version.ref = "material2Design" }
androidx-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
androidx-fragment-testing = { module = "androidx.fragment:fragment-testing", version.ref = "fragment" }
androidx-savedState = { module = "androidx.savedstate:savedstate", version.ref = "savedState" }
androidx-transition = { module = "androidx.transition:transition-ktx", version.ref = "transition" }

# Android lifecycle
androidx-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-lifecycleCommonJava8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycle" }
androidx-lifecycleLivedataKtx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-sharetarget = { module = "androidx.sharetarget:sharetarget", version.ref = "sharetarget" }
androidx-activity = { module = "androidx.activity:activity-ktx", version.ref = "activity" }
androidx-lifecycleProcess = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
androidx-lifecycleViewModelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }

# Android startup
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "startup" }

# Android Concurrent Futures
androidx-concurrent-futures = { module = "androidx.concurrent:concurrent-futures-ktx", version.ref = "concurrentFutures" }

# Android navigation
androidx-navigation-ui-extensions = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
androidx-navigation-fragment-extensions = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }

# Billing
billing = { module = "com.android.billingclient:billing-ktx", version.ref = "billing" }

# Camerax
cameraCore = { module = "androidx.camera:camera-core", version.ref = "camerax" }
cameraTwo = { module = "androidx.camera:camera-camera2", version.ref = "camerax" }
cameraLifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camerax" }
cameraVideo = { module = "androidx.camera:camera-video", version.ref = "camerax" }
cameraView = { module = "androidx.camera:camera-view", version.ref = "camerax" }

# Coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# AndroidX Random
androidx-browser = { module = "androidx.browser:browser", version.ref = "browser" }

# Logging
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Moshi
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-codegen = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }

# HTTP
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp3-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

# Retrofit
retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit2-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
retrofit2-retrofit-mock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofit" }

# Coil
coil = { module = "io.coil-kt:coil", version.ref = "coil" }

# Play core library
playCore = { module = "com.google.android.play:core", version.ref = "googlePlayCore" }
playCoreKtx = { module = "com.google.android.play:core-ktx", version = "1.8.1" }

# Mp4Composer-android
mp4Composer = { module = "com.github.MasayukiSuda:Mp4Composer-android", version.ref = "mp4Composer" }

# Flipper
flipper-core = { module = "com.facebook.flipper:flipper", version.ref = "flipper" }
flipper-network-plugin = { module = "com.facebook.flipper:flipper-network-plugin", version.ref = "flipper" }
flipper-leakcanary-plugin = { module = "com.facebook.flipper:flipper-leakcanary-plugin", version.ref = "flipper" }
sso-loader = { module = "com.facebook.soloader:soloader", version.ref = "ssoloader" }

# Firebase
firebase-analytics = { module = "com.google.firebase:firebase-analytics", version.ref = "firebaseAnalytics" }
firebase-auth = { module = "com.google.firebase:firebase-auth-ktx", version.ref = "firebaseAuth" }
firebase-pref = { module = "com.google.firebase:firebase-perf", version.ref = "firebasePerformance" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging", version.ref = "firebaseMessaging" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics", version.ref = "firebaseCrashlytics" }
firebase-crashlytics-ndk = { module = "com.google.firebase:firebase-crashlytics-ndk", version.ref = "firebaseCrashlytics" }

# Google Play Services
googleLocation = { module = "com.google.android.gms:play-services-location", version.ref = "googleLocation" }
googleMaps = { module = "com.google.android.gms:play-services-maps", version.ref = "googleMaps" }
googleAuth = { module = "com.google.android.gms:play-services-auth", version.ref = "googleAuth" }
googleAuthPhone = { module = "com.google.android.gms:play-services-auth-api-phone", version.ref = "googleAuthPhone" }

flexbox = { module = "com.google.android.flexbox:flexbox", version.ref = "flexbox" }

# Facebook
facebook-login = { module = "com.facebook.android:facebook-login", version.ref = "facebook" }
bolts = { module = "com.parse.bolts:bolts-android", version.ref = "bolts" }

# Chat
sendbird-android-sdk = { module = "com.sendbird.sdk:sendbird-android-sdk", version.ref = "sendbird" }
sendbird-android-calls = { module = "com.sendbird.sdk:sendbird-calls", version.ref = "sendbirdVideo" }

# Room
room = { module = "androidx.room:room-common", version.ref = "room" }
roomktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

# Better Link Movement from Saket
betterLinkMovement = { module = "me.saket:better-link-movement-method", version.ref = "betterLinkMovement" }

# Exoplayer
exoPlayer = { module = "com.google.android.exoplayer:exoplayer", version.ref = "exoPlayer" }
exoPlayer-okhttp = { module = "com.google.android.exoplayer:extension-okhttp", version.ref = "exoPlayer" }

# Compose
compose = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
composeTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
composeToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
composeMaterial = { module = "androidx.compose.material3:material3", version.ref = "material3Design" }
composeMaterial1 = { module = "androidx.compose.material:material", version.ref = "composeMaterial1" }
composeConstraintLayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "composeConstraint" }
composeCoil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
composeCustomView = { module = "androidx.customview:customview", version.ref = "composeCustomView" }
composeCustomViewPoolingContainer = { module = "androidx.customview:customview-poolingcontainer", version.ref = "composeCustomViewPoolingContainer" }
composeActivity = { module = "androidx.activity:activity-compose", version.ref = "activity"}
accompanist_pager = { module = "com.google.accompanist:accompanist-pager", version.ref="accompanist"}
accompanist_pager_indicator = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "accompanist"}

# Lottie
lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }

# Dagger
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

# Hilt
dagger-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
dagger-hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "dagger" }
dagger-hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "dagger" }
dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "dagger" }
androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hilt" }
androidx-hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hilt" }
androidx-hilt-navigation = { module = "androidx.hilt:hilt-navigation-fragment", version.ref = "hilt" }

# Desugar
desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }

# Work manager
workManager-runtime = { module = "androidx.work:work-runtime", version.ref = "workManager" }
workManager-runtime-extensions = { module = "androidx.work:work-runtime-ktx", version.ref = "workManager" }
workManagerTest = { module = "androidx.work:work-testing", version.ref = "workManager" }

# Marketing

braze = { module = "com.appboy:android-sdk-ui", version.ref = "braze" }
appsflyer = { module = "com.appsflyer:af-android-sdk", version.ref = "appsflyer" }
installreferrer = { module = "com.android.installreferrer:installreferrer", version.ref = "installreferrer" }

# Split
split = { module = "io.split.client:android-client", version.ref = "split" }

# Leak canary
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }

# ktlint
ktlint-core = { module = "com.pinterest.ktlint:ktlint-core", version.ref = "ktlintCore" }

# Faker
faker = { module = "io.github.serpro69:kotlin-faker", version.ref = "faker" }

# Unit Testing
junit = { module = "junit:junit", version.ref = "junit" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidXTestCore" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidXTestRunner" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidXTestRules" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidXExtJunit" }
androidx-arch-coreTesting = { module = "androidx.arch.core:core-testing", version.ref = "androidArchCoreTesting" }
androidx-test = { module = "androidx.arch.core:core-testing", version.ref = "androidArchCoreTesting" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }
ktlint-test = { module = "com.pinterest.ktlint:ktlint-test", version.ref = "ktlintCore" }

# UI Testing
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
uiAutomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiAutomator" }
androidTestOrchestrator = { module = "androidx.test:orchestrator", version.ref = "testOrchestrator" }

# KSP
ksp-gradlePlugin = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin:1.7.0-1.0.6"

# Robolectric
robolectric = "org.robolectric:robolectric:4.8"

[bundles]

androidx-compose = ["compose", "composeToolingPreview", "composeMaterial", "composeConstraintLayout", "composeActivity", "androidx-lifecycleViewModelCompose"]
coroutines = ["coroutines-core", "coroutines-android"]
navigation = ["androidx-navigation-ui-extensions", "androidx-navigation-fragment-extensions"]
exoPlayer = ["exoPlayer", "exoPlayer-okhttp"]
mockk = ["junit", "mockk"]
retrofit = ["retrofit2", "retrofit2-converter-moshi"]
workManager = ["workManager-runtime", "workManager-runtime-extensions"]
sendbird = ["sendbird-android-sdk", "sendbird-android-calls"]
flipper = ["flipper-core", "flipper-network-plugin", "flipper-leakcanary-plugin", "sso-loader"]
flipper-without-leakcanary = ["flipper-core", "flipper-network-plugin", "sso-loader"]
camera = ["cameraCore", "cameraTwo", "cameraLifecycle", "cameraVideo", "cameraView"]
uiTesting = ["espresso-core", "androidx-test-core", "androidx-test-runner", "androidx-test-rules", "androidx-test-ext-junit", "uiAutomator"]
arrow = ["arrow", "arrowfx-coroutines"]
androidx-core = ["androidx-appcompat", "androidx-core"]
androidx-ui = [
    "androidx-activity",
    "androidx-constraintLayout",
    "androidx-fragment",
    "androidx-lifecycle",
    "androidx-lifecycleCommonJava8",
    "androidx-lifecycleLivedataKtx",
    "androidx-recyclerview",
    "androidx-savedState",
    "androidx-sharetarget",
    "androidx-transition",
    "androidx-viewmodel",
    "materialDesign",
]
play-core = ["playCore", "playCoreKtx"]
facebook = ["facebook-login", "bolts"]
